kubewarden:
  title: Kubewarden
  policyServer:
    title: Policy Servers
  admissionPolicy:
    title: Admission Policies
    description: AdmissionPolicy is a namespace-wide resource. These policies will process only the requests that are targeting the Namespace where the AdmissionPolicy is defined.
    namespaceWarning: This policy is targeting Rancher specific namespaces which will cause catastrophic failures with your Rancher deployment.
  clusterAdmissionPolicy:
    title: Cluster Admission Policies
    description: ClusterAdmissionPolicy is a cluster-wide resource. These policies will process all requests within the cluster where the ClusterAdmissionPolicy is defined.
  customPolicy:
    badge: Custom
    title: Custom Policy
    description: A generic template for using your own policy.
  utils:
    resetFilter: Reset Filter
  tracing:
    noJaeger: No Jaeger service is installed, please follow the steps <a href="https://github.com/kubewarden/ui/wiki/Tracing" target="_blank" rel="noopener noreferrer nofollow">listed here</a> to setup tracing for your policies.
    noRelatedTraces: No tracing data exists for the related policies.
    noTraces: No tracing data exists for this policy. 
  policyConfig:
    serverSelect:
      label: Policy Server
      tooltip: The PolicyServer that will receive the requests to be validated.
    module:
      label: Module
      tooltip: This is the WebAssembly module that holds the validation or mutation logic.
    mutating:
      label: Mutating
      tooltip: A mutating policy will rebuild the requests with definied values that are conformant with the policy definition.
    mode:
      label: Mode
      tooltip: The monitor mode is a way to deploy policies to the cluster in a way that all requests that go through the policy will be accepted, as if the policy didn't exist. Defaults to 'Protect'.
      warning: Once the policy mode has been switched to Protect, you will not be able to revert this change.
    ignoreRancherNamespaces:
      label: Ignore Rancher Namespaces
      tooltip: Certain policies will break core services of Rancher, this will add a default list of namespaces to ignore.
    rules:
      add: Add Rule Set
      remove: Remove Rule Set
    apiGroups:
      label: API Group
    apiVersions:
      label: API Version
    operations:
      label: Operation type
      tooltip: The type of operation to be validated.
    resources:
      label: Resource type
      tooltip: The targeted resources for the policy. Needs to be a resource that is supported by the policy, this is determined in the `metadata.yml` of the selected policy.
  policyServerConfig:
    defaultImage:
      label: Default Image
      tooltip: Use the default `policy-server` container image.
    image:
      label: Image URL
      tooltip: This is the container image the policy server.
    replicas: Replicas
    registry:
      description: The PolicyServer allows you to pull policies from OCI registries and HTTP servers, by default HTTPS is enforced with host TLS verification. You can interact with registries using untrusted certificates or even without TLS by using the `insecureSources` setting. This approach is highly discouraged in environments closer to production. More information on configuring custom certificate authorities can be found <a href="https://docs.kubewarden.io/operator-manual/policy-servers/custom-cas" target="_blank" rel="noopener noreferrer nofollow">here</a>.
    insecureSources:
      title: Insecure Sources
      addLabel: Add Insecure Source
      placeholder: registry-dev.example.com:5500
    sourceAuthorities:
      title: Source Authorities
      add: Add Source Authority
      endpoint: Registry URI Endpoint
      placeholder: registry-pre.example.com:5500
      certificate: 
        label: Certificate 
        add: Add PEM Certificate
        remove: Remove Certificate
        file: Read Certificate from File
    verification:
      label: Verification Config
      description: This is the name of a VerificationConfig configmap within the same namespace, containing a Sigstore verification configuration. The configuration must be under a key named verification-config in the Configmap. More information can be found <a href="https://docs.kubewarden.io/operator-manual/verification-config" target="_blank" rel="noopener noreferrer nofollow">here</a>.
  policyCharts:
    signedPolicy: This policy has been signed with cosign (Sigstore).
    mutationPolicy: Mutation Policy
    contextAware: Context Aware
    allow-privilege-escalation-psp:
      name: Allow Privilege Escalation PSP
      description: A Pod Security Policy that controls usage of `allowPrivilegeEscalation`
      resourceType: Pod
      keywords: |
        PSP
        Container
        Privilege Escalation
    allowed-fsgroups-psp:
      name: Allowed fsGroups PSP
      description: Replacement for the Kubernetes Pod Security Policy that controls the usage of fsGroup in the pod security context
      resourceType: Pod
      keywords: |
        PSP
        Container
        Runtime
    allowed-proc-mount-types-psp:
      name: Allowed Proc Mount Types PSP
      description: Replacement for the Kubernetes Pod Security Policy that controls the usage of /proc mount types
      resourceType: Pod
      keywords: |
        PSP
        Container
        Runtime
    apparmor-psp:
      name: AppArmor PSP
      description: A Pod Security Policy that controls usage of AppArmor profiles
      resourceType: Pod
      keywords: |
        PSP
        AppArmor
    capabilities-psp:
      name: Capabilities PSP
      description: A Pod Security Policy that controls Container Capabilities
      resourceType: Pod
      keywords: |
        PSP
        Container
        Capability
        Capabilities
    disallow-service-loadbalancer:
      name: Disallow Service LoadBalancer
      description: A policy that prevents the creation of Service resources of type `LoadBalancer`
      resourceType: Service
      keywords: |
        Service
    disallow-service-nodeport:
      name: Disallow Service NodePort
      description: A policy that prevents the creation of Service resources of type `NodePort`
      resourceType: Service
      keywords: |
        Service
    flexvolume-drivers-psp:
      name: FlexVolume Drivers PSP
      description: Replacement for the Kubernetes Pod Security Policy that controls the allowed `flexVolume` drivers
      resourceType: Pod
      keywords: |
        PSP
        Container
        Runtime
        Flex Volume
        Flex
    host-namespaces-psp:
      name: Host Namespaces PSP
      description: A Pod Security Policy that controls the usage of host namespaces
      resourceType: Pod
      keywords: |
        PSP
        Container
        Network
    hostpaths-psp:
      name: Hostpaths PSP
      description: A Pod Security Policy that controls usage of hostPath volumes
      resourceType: Pod
      keywords: |
        PSP
        Hostpaths
        Pod
    ingress:
      name: Ingress
      description: Enforce requirements on Ingress resources
      resourceType: Ingress
      keywords: |
        Ingress
    pod-privileged-policy:
      name: Pod Privileged Policy
      description: Limit the ability to create privileged containers
      resourceType: Pod
      keywords: |
        PSP
        Pod
        Container
        Privileged
    pod-runtime:
      name: Pod Runtime
      description: Control Pod runtimeClass usage
      resourceType: Pod
      keywords: |
        Pod
        Runtime
        Container Runtime
    readonly-root-filesystem-psp:
      name: Readonly Root Filesystem PSP
      description: A Kubewarden policy that enforces root filesystem to be readonly
      resourceType: Pod
      keywords: |
        PSP
        Container
        filesystem
        Volume
    safe-annotations:
      name: Safe Annotations
      description: A policy that validates Kubernetes' resource annotations
      resourceType: Global
      keywords: |
        Annotations
    safe-labels:
      name: Safe Labels
      description: A policy that validates Kubernetes' resource labels
      resourceType: Global
      keywords: |
        Labels
    seccomp-psp:
      name: Seccomp PSP
      description: Pod Security Policy that controls usage of Seccomp profile
      resourceType: Pod
      keywords: |
        PSP
        seccomp
    selinux-psp:
      name: SELinux PSP
      description: Replacement for the Kubernetes Pod Security Policy that controls the usage of SELinux
      resourceType: Pod
      keywords: |
        PSP
        Container
        Runtime
        SELinux
    sysctl-psp:
      name: Sysctl PSP
      description: A Pod Security Policy that controls usage of sysctls in pods
      resourceType: Pod
      keywords: |
        PSP
        Sysctl
        Pod
    trusted-repos:
      name: Trusted Repos
      description: Restrict what registries, tags and images can be used
      resourceType: Pod
      keywords: |
        Image
        Registry
        Tag
    user-group-psp:
      name: User Group PSP
      description: A Pod Security Policy that controls the container user and groups
      resourceType: Pod
      keywords: |
        PSP
        Container
        User
        Group
    verify-image-signatures:
      name: Verify Image Signatures
      description: Validates Sigstore signatures for containers, init container and ephemeral container that match the name provided in the image settings field.
      resourceType: Pod
      keywords: |
        Pod
        Signature
        Sigstore
        Trusted
    volumes-psp:
      name: Volumes PSP
      description: Pod Security Policy that controls usage of volumes
      resourceType: Pod
      keywords: |
        PSP
        Volumes
        Pod
