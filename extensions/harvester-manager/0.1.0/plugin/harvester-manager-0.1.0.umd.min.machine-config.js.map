{"version":3,"sources":["webpack://harvester-manager-0.1.0/./machine-config/harvester.vue?49bb","webpack://harvester-manager-0.1.0/./machine-config/harvester.vue?1df7","webpack://harvester-manager-0.1.0/./machine-config/harvester.vue?9fcc","webpack://harvester-manager-0.1.0/machine-config/harvester.vue","webpack://harvester-manager-0.1.0/./machine-config/harvester.vue?0f1b","webpack://harvester-manager-0.1.0/./machine-config/harvester.vue","webpack://harvester-manager-0.1.0/./machine-config/harvester.vue?678e"],"names":["content","__esModule","default","module","i","locals","exports","add","render","_vm","this","_h","$createElement","_c","_self","$fetchState","attrs","staticClass","directives","name","rawName","mode","disabled","t","model","value","callback","$$v","$set","expression","namespaceOptions","namespaceDisabled","_v","_s","isView","on","update","disks","_l","disk","key","class","length","$event","removeVolume","headerFor","hasOwnProperty","imageOptions","onOpen","storageClassOptions","preventDefault","changeSort","addVolume","network","interfaces","removeNetwork","networkOptions","addNetwork","uuid","vmAffinity","affinity","nodeAffinity","updateNodeScheduling","userDataOptions","userData","_e","ref","valuesChanged","networkDataOptions","networkData","errors","err","idx","stringify","Message","staticRenderFns","STORAGE_NETWORK","isReady","SOURCE_TYPE","Volume","IMAGE","components","draggable","Loading","LabeledSelect","LabeledInput","UnitInput","Banner","YamlEditor","NodeAffinity","InfoBox","mixins","props","credentialId","type","required","poolIndex","machinePools","id","namespaces","url","images","configMaps","networks","storageClass","settings","O","label","systemNamespaces","data","imageName","bootOrder","size","networkName","macAddress","_interface","credential","allNodeObjects","cpuCount","isOldFormat","computed","disabledEdit","get","set","defaultStorageClass","watch","handler","deep","methods","test","podAffinityValidator","validatorRequiredField","validatorDiskAndNetowrk","updateScheduling","Object","storageClassName","removeObject","component","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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AAAF,wBACAG,iDAAAH,0DACAI,qDAAAJ,yBACAK,iDAAAL,kCAGA,+BACA,aAEA,uBACA,2CAKA,yBAEA,sDACAN,oBACAI,OAGA,iCACA,kCAIA,WACA,OAEA,8EACA,QACAQ,QADA,EACAA,qFAEA,YACA3C,QACA4C,sBACAlF,yBAIA,eACA2C,QACAuC,sBACAlF,2BAKA,uBACA,0BACA,gEACA,4EACA,oNACA,MACA,EAEA,IACA,kCAEA,SAEAA,OACAkF,uBACA,UAEA,OACAA,QACAlF,WAIA,+GAEA,eACAmF,iJAGA,+CACA,uDAEA,8BAEA,+CAEA,uBACA,wBACA,kBAEA,wBACA,4BACAD,QACAlF,aAKA,IACA,MAAAoF,cAAA,wCAAAT,wBAEA,sBACA,SACA,wBAYA,GARA,2BACA,yBAGA,6BACA,4BAGA,qBACA,oBAGA,SACAU,mCACAC,YACAC,8BAGA,qBACAzE,0BAGA,SAAAF,WAEA,sCAKA,GAFA,sDAEA,wBACA,oBAEA,SACA4E,uCACAC,eAGA,0BACAC,kBAGA,SAAA7D,gBAEA,yCAEA,kEAEA,cACA,SACA,gCAIAuD,OACA,OAAAjD,aACA,KACA,KAcA,OAZA,wBACAD,GAAAC,6DAGA,sBACAI,uCAGA,yBACAK,0CAGA,CACA+C,gBACAzD,aACAK,WACAK,cACAgC,UACAG,gBACAL,cACArE,oBACA0B,kBACAO,mBACAK,sBACAiD,kBACAC,YACAjF,SACAiB,cACAiE,eACAzC,gBAIA0C,aACA,gBAAAjG,aAEAkG,eACA,uDAGA1E,cACA2E,MACA,mCACA,wCACA,oFACA,aACA,iCAEA,OACAf,QACAlF,YAIAkG,OACA,gBAIA5F,oBACA,4CAGAkB,sBACA,gIACA,kIACA,wEAEA,OACA0D,QACAlF,0BAEA,GAEA,UAGAmG,sBAAA,MACA,iIACA,kIAEA,WAGA,oFAIAC,OACAhC,eACA,iBACA,qBACA,uBACA,mBACA,qBACA,yBACA,iBAAAjC,aACA,wBACA,0BACA,0BACA,yBAGA,SACAvB,QACAyE,aACAC,YACAC,WAIA,sCAGA,SACA1D,aACA2D,eACAC,iBAIA,yCAGA,eAGA7C,eACA,uCACA,0CAGAL,YACA,wCACA,uCAGAiC,cACA6B,WACA,gCAEA,+CACA,2BAGAC,UAIAC,SACAvD,iBAEAwD,OACA,WAEA,yBACA,oCACA,4CAGA3D,UAGA,4BACA,oCACA,kDAGAA,UAGA,2BACA,oCACA,+CAGAA,UAGA,wBACA,oCACA,gDAGAA,UAOA,OAJA,gCAEA4D,+DAEA,CAAA5D,WAGA6D,0BACA,qCAAA3F,SAGA4F,2BACA,8CACA,gDAEA/F,cACA,sEACA,oCACA,8CAGAiC,UAGA,oFACA,oCACA,4DAGAA,UAGA,YACA,oCACA,6CAGAA,aAIAhB,cACA,mBACA,oCACA,4DAGAgB,UAGA,gDACA,wFAEAA,aAIA,6EAEA,2BACA,uBAEA,oCACA,sCAEA,0CAIAH,mBACA,iCAGAnB,SACA,mBAGA,mBACA,IACA,gEACA,0BAEA,MACA,sDAAAoD,8BAEA,gDAEA,SACA,gCAIAiC,oBACA,eAAAzE,GAAA,EAEA,uDAIA,OAHA,8BACA,iBAAAA,cAKA,wDACA,mBAGAE,wBACA,yBAGAwE,wCAAAzE,iBAFAyE,+BAAA1E,UAAAC,kBAKA,wCAGAT,aACA,aACA,iBACAmF,0CACAvB,UAEA,aACA,iBACAF,aACAE,UAIA,eAGAvD,aACA,sBACAwD,eACAC,gBAGA,eAGA9E,SACA,SACAC,6BACA,IACA,EACA2E,oBACAD,kBAKA,sCAEA,SAAAzD,4BAEA,0CAGAV,gBACA,WACA4F,6BACA,eAGAjF,iBACA,WACAiF,kCACA,eAGArF,gBAEA,iFACA,eAGAN,gBACA,6EAEA,OACA,uFACA,4FACA,MCtoBgY,I,wBCQ5X4F,EAAY,eACd,EACAjI,EACAmE,GACA,EACA,KACA,WACA,MAIa,aAAA8D,E,gCClBf,IAAIC,EAA8B,EAAQ,QAC1CpI,EAAUoI,GAA4B,GAEtCpI,EAAQqI,KAAK,CAACxI,EAAOC,EAAI,4qCAA+qC,KAExsCD,EAAOG,QAAUA","file":"harvester-manager-0.1.0.umd.min.machine-config.js","sourcesContent":["export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./harvester.vue?vue&type=style&index=0&id=61c21274&prod&lang=scss&scoped=true&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./harvester.vue?vue&type=style&index=0&id=61c21274&prod&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"780fcd3f\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.$fetchState.pending)?_c('Loading',{attrs:{\"delayed\":true}}):_c('div',[_c('div',{staticClass:\"row mt-20\"},[_c('div',{staticClass:\"col span-6\"},[_c('UnitInput',{directives:[{name:\"int-number\",rawName:\"v-int-number\"}],attrs:{\"label-key\":\"cluster.credential.harvester.cpu\",\"suffix\":\"C\",\"output-as\":\"string\",\"required\":\"\",\"mode\":_vm.mode,\"disabled\":_vm.disabled,\"placeholder\":_vm.t('cluster.harvester.machinePool.cpu.placeholder')},model:{value:(_vm.value.cpuCount),callback:function ($$v) {_vm.$set(_vm.value, \"cpuCount\", $$v)},expression:\"value.cpuCount\"}})],1),_c('div',{staticClass:\"col span-6\"},[_c('UnitInput',{directives:[{name:\"int-number\",rawName:\"v-int-number\"}],attrs:{\"label-key\":\"cluster.credential.harvester.memory\",\"output-as\":\"string\",\"suffix\":\"GiB\",\"mode\":_vm.mode,\"disabled\":_vm.disabled,\"required\":\"\",\"placeholder\":_vm.t('cluster.harvester.machinePool.memory.placeholder')},model:{value:(_vm.value.memorySize),callback:function ($$v) {_vm.$set(_vm.value, \"memorySize\", $$v)},expression:\"value.memorySize\"}})],1)]),_c('div',{staticClass:\"row mt-20\"},[_c('div',{staticClass:\"col span-6\"},[_c('LabeledSelect',{attrs:{\"mode\":_vm.mode,\"options\":_vm.namespaceOptions,\"searchable\":true,\"required\":true,\"disabled\":_vm.namespaceDisabled,\"label-key\":\"cluster.credential.harvester.namespace\",\"placeholder\":_vm.t('cluster.harvester.machinePool.namespace.placeholder')},model:{value:(_vm.value.vmNamespace),callback:function ($$v) {_vm.$set(_vm.value, \"vmNamespace\", $$v)},expression:\"value.vmNamespace\"}})],1),_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"label-key\":\"cluster.credential.harvester.sshUser\",\"required\":true,\"mode\":_vm.mode,\"disabled\":_vm.disabled,\"placeholder\":_vm.t('cluster.harvester.machinePool.sshUser.placeholder'),\"tooltip-key\":\"cluster.harvester.machinePool.sshUser.toolTip\"},model:{value:(_vm.value.sshUser),callback:function ($$v) {_vm.$set(_vm.value, \"sshUser\", $$v)},expression:\"value.sshUser\"}})],1)]),_c('h2',{staticClass:\"mt-20\"},[_vm._v(\" \"+_vm._s(_vm.t('cluster.credential.harvester.volume.title'))+\" \")]),_c('draggable',{attrs:{\"disabled\":_vm.isView},on:{\"end\":_vm.update},model:{value:(_vm.disks),callback:function ($$v) {_vm.disks=$$v},expression:\"disks\"}},[_c('transition-group',_vm._l((_vm.disks),function(disk,i){return _c('div',{key:i},[_c('InfoBox',{staticClass:\"box\",class:[_vm.disks.length === i +1 ? 'mb-10' : 'mb-20']},[_c('button',{staticClass:\"role-link btn btn-sm remove\",attrs:{\"type\":\"button\",\"disabled\":i === 0},on:{\"click\":function($event){return _vm.removeVolume(disk)}}},[_c('i',{staticClass:\"icon icon-x\"})]),_c('h4',[_vm._v(\" \"+_vm._s(_vm.headerFor(disk))+\" \")]),_c('div',{staticClass:\"row mb-10\"},[_c('div',{staticClass:\"col span-6\"},[(disk.hasOwnProperty('imageName'))?_c('LabeledSelect',{attrs:{\"mode\":_vm.mode,\"options\":_vm.imageOptions,\"required\":true,\"searchable\":true,\"disabled\":_vm.disabled,\"label-key\":\"cluster.credential.harvester.image\",\"placeholder\":_vm.t('cluster.harvester.machinePool.image.placeholder')},on:{\"on-open\":_vm.onOpen,\"input\":_vm.update},model:{value:(disk.imageName),callback:function ($$v) {_vm.$set(disk, \"imageName\", $$v)},expression:\"disk.imageName\"}}):_c('LabeledSelect',{attrs:{\"options\":_vm.storageClassOptions,\"label-key\":\"cluster.credential.harvester.volume.storageClass\",\"mode\":_vm.mode,\"disabled\":_vm.disabled,\"required\":true},on:{\"input\":_vm.update},model:{value:(disk.storageClassName),callback:function ($$v) {_vm.$set(disk, \"storageClassName\", $$v)},expression:\"disk.storageClassName\"}})],1),_c('div',{staticClass:\"col span-6\"},[_c('UnitInput',{directives:[{name:\"int-number\",rawName:\"v-int-number\"}],attrs:{\"label-key\":\"cluster.credential.harvester.disk\",\"output-as\":\"string\",\"suffix\":\"GiB\",\"mode\":_vm.mode,\"disabled\":_vm.disabled,\"required\":\"\",\"placeholder\":_vm.t('cluster.harvester.machinePool.disk.placeholder')},on:{\"input\":_vm.update},model:{value:(disk.size),callback:function ($$v) {_vm.$set(disk, \"size\", $$v)},expression:\"disk.size\"}})],1)]),_c('div',{staticClass:\"bootOrder\"},[_c('div',{staticClass:\"mr-15\"},[_c('button',{staticClass:\"btn btn-sm role-primary\",attrs:{\"disabled\":i === 0},on:{\"click\":function($event){$event.preventDefault();return _vm.changeSort(i, false)}}},[_c('i',{staticClass:\"icon icon-lg icon-chevron-up\"})]),_c('button',{staticClass:\"btn btn-sm role-primary\",attrs:{\"disabled\":i === _vm.disks.length -1},on:{\"click\":function($event){$event.preventDefault();return _vm.changeSort(i, true)}}},[_c('i',{staticClass:\"icon icon-lg icon-chevron-down\"})])]),_c('div',{staticClass:\"text-muted\"},[_vm._v(\" bootOrder: \"+_vm._s(i + 1)+\" \")])])])],1)}),0)],1),_c('div',{staticClass:\"volume\"},[_c('button',{staticClass:\"btn btn-sm bg-primary mr-15 mb-10\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.addVolume('volume')}}},[_vm._v(\" \"+_vm._s(_vm.t('cluster.credential.harvester.volume.addVolume'))+\" \")]),_c('button',{staticClass:\"btn btn-sm bg-primary mr-15 mb-10\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.addVolume('image')}}},[_vm._v(\" \"+_vm._s(_vm.t('cluster.credential.harvester.volume.addVMImage'))+\" \")])]),_c('hr',{staticClass:\"mt-10 mb-10\"}),_c('h2',[_vm._v(_vm._s(_vm.t('cluster.credential.harvester.network.title')))]),_vm._l((_vm.interfaces),function(network,i){return _c('div',{key:i},[_c('InfoBox',{staticClass:\"box\",class:[_vm.interfaces.length === i +1 ? 'mb-10' : 'mb-20']},[_c('button',{staticClass:\"role-link btn btn-sm remove\",attrs:{\"type\":\"button\",\"disabled\":i === 0},on:{\"click\":function($event){return _vm.removeNetwork(network)}}},[_c('i',{staticClass:\"icon icon-x\"})]),_c('h4',[_c('span',[_vm._v(\" \"+_vm._s(_vm.t('cluster.credential.harvester.network.network'))+\" \")])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col span-6\"},[_c('LabeledSelect',{attrs:{\"mode\":_vm.mode,\"options\":_vm.networkOptions,\"required\":true,\"label-key\":\"cluster.credential.harvester.network.networkName\",\"placeholder\":_vm.t('cluster.harvester.machinePool.network.placeholder')},on:{\"input\":_vm.update},model:{value:(network.networkName),callback:function ($$v) {_vm.$set(network, \"networkName\", $$v)},expression:\"network.networkName\"}})],1),_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"label-key\":\"cluster.credential.harvester.network.macAddress\",\"mode\":_vm.mode},on:{\"input\":_vm.update},model:{value:(network.macAddress),callback:function ($$v) {_vm.$set(network, \"macAddress\", $$v)},expression:\"network.macAddress\"}})],1)])])],1)}),_c('button',{staticClass:\"btn btn-sm bg-primary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.addNetwork}},[_vm._v(\" \"+_vm._s(_vm.t('cluster.credential.harvester.network.addNetwork'))+\" \")]),_c('portal',{attrs:{\"to\":'advanced-'+_vm.uuid}},[_c('h3',{staticClass:\"mt-20\"},[_vm._v(\" \"+_vm._s(_vm.t(\"workload.container.titles.nodeScheduling\"))+\" \")]),_c('NodeAffinity',{attrs:{\"mode\":_vm.mode,\"value\":_vm.vmAffinity.affinity.nodeAffinity},on:{\"input\":_vm.updateNodeScheduling}}),_c('h3',{staticClass:\"mt-20\"},[_vm._v(\" \"+_vm._s(_vm.t(\"cluster.credential.harvester.userData.title\"))+\" \")]),_c('div',[(_vm.isCreate)?_c('LabeledSelect',{staticClass:\"mb-10\",attrs:{\"options\":_vm.userDataOptions,\"label-key\":\"cluster.credential.harvester.userData.label\",\"mode\":_vm.mode,\"disabled\":_vm.disabled},model:{value:(_vm.userData),callback:function ($$v) {_vm.userData=$$v},expression:\"userData\"}}):_vm._e(),_c('YamlEditor',{key:_vm.userData,ref:\"userDataYamlEditor\",staticClass:\"yaml-editor mb-20\",attrs:{\"editor-mode\":_vm.mode === 'view' ? 'VIEW_CODE' : 'EDIT_CODE',\"value\":_vm.userData,\"disabled\":_vm.disabled},on:{\"onInput\":function($event){return _vm.valuesChanged($event, 'userData')}}})],1),_c('h3',[_vm._v(_vm._s(_vm.t('cluster.credential.harvester.networkData.title')))]),_c('div',[(_vm.isCreate)?_c('LabeledSelect',{staticClass:\"mb-10\",attrs:{\"options\":_vm.networkDataOptions,\"label-key\":\"cluster.credential.harvester.networkData.label\",\"mode\":_vm.mode,\"disabled\":_vm.disabled},model:{value:(_vm.networkData),callback:function ($$v) {_vm.networkData=$$v},expression:\"networkData\"}}):_vm._e(),_c('YamlEditor',{key:_vm.networkData,ref:\"networkYamlEditor\",staticClass:\"yaml-editor mb-10\",attrs:{\"editor-mode\":_vm.mode === 'view' ? 'VIEW_CODE' : 'EDIT_CODE',\"value\":_vm.networkData,\"disabled\":_vm.disabled},on:{\"onInput\":function($event){return _vm.valuesChanged($event, 'networkData')}}})],1)],1)],2),(_vm.errors.length)?_c('div',_vm._l((_vm.errors),function(err,idx){return _c('div',{key:idx},[_c('Banner',{attrs:{\"color\":\"error\",\"label\":_vm.stringify(err.Message || err)}})],1)}),0):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport draggable from 'vuedraggable';\nimport isEmpty from 'lodash/isEmpty';\nimport NodeAffinity from '@shell/components/form/NodeAffinity';\n// import PodAffinity from '@shell/components/form/PodAffinity';\nimport InfoBox from '@shell/components/InfoBox';\nimport Loading from '@shell/components/Loading';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport YamlEditor from '@shell/components/YamlEditor';\nimport { Banner } from '@components/Banner';\n\nimport { get } from '@shell/utils/object';\nimport { removeObject } from '@shell/utils/array';\nimport { mapGetters } from 'vuex';\nimport {\n  HCI,\n  NAMESPACE,\n  MANAGEMENT,\n  CONFIG_MAP,\n  NORMAN,\n  NODE,\n  STORAGE_CLASS\n} from '@shell/config/types';\n\nimport { SETTING } from '@shell/config/settings';\nimport { base64Decode, base64Encode } from '@shell/utils/crypto';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { podAffinity as podAffinityValidator } from '@shell/utils/validators/pod-affinity';\nimport { stringify, exceptionToErrorsArray } from '@shell/utils/error';\nimport { isValidMac } from '@shell/utils/validators/cidr';\nimport { HCI as HCI_ANNOTATIONS, STORAGE } from '@shell/config/labels-annotations';\n\nconst STORAGE_NETWORK = 'storage-network.settings.harvesterhci.io';\n\nexport function isReady() {\n  function getStatusConditionOfType(type, defaultValue = []) {\n    const conditions = Array.isArray(get(this, 'status.conditions')) ? this.status.conditions : defaultValue;\n\n    return conditions.find( cond => cond.type === type);\n  }\n\n  const initialized = getStatusConditionOfType.call(this, 'Initialized');\n  const imported = getStatusConditionOfType.call(this, 'Imported');\n  const isCompleted = this.status?.progress === 100;\n\n  if ([initialized?.status, imported?.status].includes('False')) {\n    return false;\n  } else {\n    return isCompleted && true;\n  }\n}\n\nconst SOURCE_TYPE = {\n  Volume: 'volume',\n  IMAGE:  'image',\n};\n\nexport default {\n  name: 'ConfigComponentHarvester',\n\n  components: {\n    draggable, Loading, LabeledSelect, LabeledInput, UnitInput, Banner, YamlEditor, NodeAffinity, InfoBox\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    credentialId: {\n      type:     String,\n      required: true\n    },\n\n    uuid: {\n      type:     String,\n      required: true\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n\n    poolIndex: {\n      type:     Number,\n      required: true\n    },\n\n    machinePools: {\n      type:    Array,\n      default: () => []\n    }\n  },\n\n  async fetch() {\n    this.errors = [];\n\n    try {\n      this.credential = await this.$store.dispatch('rancher/find', {\n        type: NORMAN.CLOUD_CREDENTIAL,\n        id:   this.credentialId\n      });\n      const clusterId = get(this.credential, 'decodedData.clusterId');\n\n      const url = `/k8s/clusters/${ clusterId }/v1`;\n\n      if (clusterId) {\n        const res = await allHashSettled({\n          namespaces:   this.$store.dispatch('cluster/request', { url: `${ url }/${ NAMESPACE }s` }),\n          images:       this.$store.dispatch('cluster/request', { url: `${ url }/${ HCI.IMAGE }s` }),\n          configMaps:   this.$store.dispatch('cluster/request', { url: `${ url }/${ CONFIG_MAP }s` }),\n          networks:     this.$store.dispatch('cluster/request', { url: `${ url }/k8s.cni.cncf.io.network-attachment-definitions` }),\n          storageClass: this.$store.dispatch('cluster/request', { url: `${ url }/${ STORAGE_CLASS }es` }),\n          settings:     this.$store.dispatch('cluster/request', { url: `${ url }/${ MANAGEMENT.SETTING }s` })\n        });\n\n        for (const key of Object.keys(res)) {\n          const obj = res[key];\n\n          if (obj.status === 'rejected') {\n            this.errors.push(stringify(obj.reason));\n            continue;\n          }\n        }\n\n        if (this.errors.length > 0) {\n          // If an error is reported in the request data, see if it is due to a cluster error\n          const cluster = await this.$store.dispatch('management/find', {\n            type: MANAGEMENT.CLUSTER,\n            id:   clusterId\n          });\n\n          if (cluster.stateDescription && !cluster.isReady) {\n            this.errors = [cluster.stateDescription];\n          }\n        }\n\n        const userDataOptions = [];\n        const networkDataOptions = [];\n\n        (res.configMaps.value?.data || []).map((O) => {\n          const cloudTemplate =\n            O.metadata?.labels?.[HCI_ANNOTATIONS.CLOUD_INIT];\n\n          if (cloudTemplate === 'user') {\n            userDataOptions.push({\n              label: O.metadata.name,\n              value: O.data.cloudInit\n            });\n          }\n\n          if (cloudTemplate === 'network') {\n            networkDataOptions.push({\n              label: O.metadata.name,\n              value: O.data.cloudInit\n            });\n          }\n        });\n\n        this.userDataOptions = userDataOptions;\n        this.networkDataOptions = networkDataOptions;\n        this.images = res.images.value?.data;\n        this.storageClass = res.storageClass.value?.data;\n        this.networkOptions = (res.networks.value?.data || []).filter(O => O.metadata?.annotations?.[STORAGE_NETWORK] !== 'true').map((O) => {\n          let value;\n          let label;\n\n          try {\n            const config = JSON.parse(O.spec.config);\n\n            const id = config.vlan;\n\n            value = O.id;\n            label = `${ value } (vlanId=${ id })`;\n          } catch (err) {}\n\n          return {\n            label,\n            value\n          };\n        });\n\n        let systemNamespaces = (res.settings.value?.data || []).filter(x => x.id === SETTING.SYSTEM_NAMESPACES);\n\n        if (systemNamespaces) {\n          systemNamespaces = (systemNamespaces[0]?.value || systemNamespaces[0]?.default)?.split(',') || [];\n        }\n\n        (res.namespaces.value.data || []).forEach(async(namespace) => {\n          const proxyNamespace = await this.$store.dispatch('cluster/create', namespace);\n\n          const isSettingSystemNamespace = systemNamespaces.includes(namespace.metadata.name);\n\n          const systemNS = proxyNamespace.isSystem || proxyNamespace.isFleetManaged || isSettingSystemNamespace || proxyNamespace.isObscure;\n\n          if (!systemNS && namespace.links.update) {\n            const value = namespace.metadata.name;\n            const label = namespace.metadata.name;\n\n            this.namespaces.push(namespace);\n            this.namespaceOptions.push({\n              label,\n              value\n            });\n          }\n        });\n\n        try {\n          const { data: nodes } = await this.$store.dispatch('cluster/request', { url: `${ url }/${ NODE }s` });\n\n          this.allNodeObjects = nodes;\n        } catch (err) {\n          this.allNodeObjects = [];\n        }\n      }\n\n      if (isEmpty(this.value.cpuCount)) {\n        this.value.cpuCount = '2';\n      }\n\n      if (isEmpty(this.value.memorySize)) {\n        this.value.memorySize = '4';\n      }\n\n      if (!this.value.diskInfo) {\n        this.isOldFormat = true;\n\n        // Convert the old format to the new format\n        const disk = {\n          imageName: this.value.imageName || '',\n          bootOrder: 1,\n          size:      this.value.diskSize || 40,\n        };\n\n        if (this.value.diskBus) {\n          disk.bus = this.value.diskBus;\n        }\n\n        const diskInfo = { disks: [disk] };\n\n        this.value.diskInfo = JSON.stringify(diskInfo);\n      }\n\n      this.disks = JSON.parse(this.value.diskInfo).disks || [];\n\n      if (!this.value.networkInfo) {\n        this.isOldFormat = true;\n\n        const _interface = {\n          networkName: this.value.networkName || '',\n          macAddress:  '',\n        };\n\n        if (this.value.networkModel) {\n          _interface.model = 'virtio';\n        }\n\n        const networkInfo = { interfaces: [_interface] };\n\n        this.value.networkInfo = JSON.stringify(networkInfo);\n      }\n      this.interfaces = JSON.parse(this.value.networkInfo).interfaces || [];\n\n      this.update();\n    } catch (e) {\n      this.errors = exceptionToErrorsArray(e);\n    }\n  },\n\n  data() {\n    let vmAffinity = { affinity: {} };\n    let userData = '';\n    let networkData = '';\n\n    if (this.value.vmAffinity) {\n      vmAffinity = { affinity: JSON.parse(base64Decode(this.value.vmAffinity)) };\n    }\n\n    if (this.value.userData) {\n      userData = base64Decode(this.value.userData);\n    }\n\n    if (this.value.networkData) {\n      networkData = base64Decode(this.value.networkData);\n    }\n\n    return {\n      credential:         null,\n      vmAffinity,\n      userData,\n      networkData,\n      images:             [],\n      storageClass:       [],\n      namespaces:         [],\n      namespaceOptions:   [],\n      networkOptions:     [],\n      userDataOptions:    [],\n      networkDataOptions: [],\n      allNodeObjects:     [],\n      cpuCount:           '',\n      disks:              [],\n      interfaces:         [],\n      isOldFormat:        false,\n      SOURCE_TYPE\n    };\n  },\n\n  computed: {\n    ...mapGetters({ t: 'i18n/t' }),\n\n    disabledEdit() {\n      return this.disabled || !!(this.isEdit && this.value.id);\n    },\n\n    imageOptions: {\n      get() {\n        return (this.images || []).filter( (O) => {\n          return !O.spec.url.endsWith('.iso') && isReady.call(O);\n        }).sort((a, b) => a.metadata.creationTimestamp > b.metadata.creationTimestamp ? -1 : 1).map( (O) => {\n          const value = O.id;\n          const label = `${ O.spec.displayName } (${ value })`;\n\n          return {\n            label,\n            value\n          };\n        });\n      },\n      set(neu) {\n        this.images = neu;\n      }\n    },\n\n    namespaceDisabled() {\n      return this.disabledEdit || this.poolIndex > 0;\n    },\n\n    storageClassOptions() {\n      const out = (this.storageClass || []).filter(s => !s.parameters?.backingImage).map((s) => {\n        const isDefault = s.metadata?.annotations?.[STORAGE.DEFAULT_STORAGE_CLASS] === 'true';\n        const label = isDefault ? `${ s.metadata.name } (${ this.t('generic.default') })` : s.metadata.name;\n\n        return {\n          label,\n          value: s.metadata.name,\n        };\n      }) || [];\n\n      return out;\n    },\n\n    defaultStorageClass() {\n      const defaultStorageClass = (this.storageClass || []).filter(s => !s.parameters?.backingImage).find((s) => {\n        const isDefault = s.metadata?.annotations?.[STORAGE.DEFAULT_STORAGE_CLASS] === 'true';\n\n        return isDefault;\n      });\n\n      return defaultStorageClass?.metadata?.name || '';\n    }\n  },\n\n  watch: {\n    credentialId() {\n      if (!this.isEdit) {\n        this.imageOptions = [];\n        this.networkOptions = [];\n        this.namespaces = [];\n        this.storageClass = [];\n        this.namespaceOptions = [];\n        this.vmAffinity = { affinity: {} };\n        this.value.imageName = '';\n        this.value.networkName = '';\n        this.value.vmNamespace = '';\n        this.value.vmAffinity = '';\n\n        // set default disk\n        const diskInfo = {\n          disks: [{\n            imageName: '',\n            bootOrder: 1,\n            size:      40,\n          }]\n        };\n\n        this.value.diskInfo = JSON.stringify(diskInfo);\n\n        // set default network\n        const networkInfo = {\n          interfaces: [{\n            networkName: '',\n            macAddress:  '',\n          }]\n        };\n\n        this.value.networkInfo = JSON.stringify(networkInfo);\n      }\n\n      this.$fetch();\n    },\n\n    networkData(neu) {\n      this.$refs.networkYamlEditor.refresh();\n      this.value.networkData = base64Encode(neu);\n    },\n\n    userData(neu) {\n      this.$refs.userDataYamlEditor.refresh();\n      this.value.userData = base64Encode(neu);\n    },\n\n    machinePools: {\n      handler(pools) {\n        const vmNamespace = pools[0].config.vmNamespace;\n\n        if (this.poolIndex > 0 && this.value.vmNamespace !== vmNamespace) {\n          this.value.vmNamespace = vmNamespace;\n        }\n      },\n      deep: true\n    }\n  },\n\n  methods: {\n    stringify,\n\n    test() {\n      const errors = [];\n\n      if (!this.value.cpuCount) {\n        const message = this.validatorRequiredField(\n          this.t('cluster.credential.harvester.cpu')\n        );\n\n        errors.push(message);\n      }\n\n      if (!this.value.vmNamespace) {\n        const message = this.validatorRequiredField(\n          this.t('cluster.credential.harvester.namespace')\n        );\n\n        errors.push(message);\n      }\n\n      if (!this.value.memorySize) {\n        const message = this.validatorRequiredField(\n          this.t('cluster.credential.harvester.memory')\n        );\n\n        errors.push(message);\n      }\n\n      if (!this.value.sshUser) {\n        const message = this.validatorRequiredField(\n          this.t('cluster.credential.harvester.sshUser')\n        );\n\n        errors.push(message);\n      }\n\n      this.validatorDiskAndNetowrk(errors);\n\n      podAffinityValidator(this.vmAffinity.affinity, this.$store.getters, errors);\n\n      return { errors };\n    },\n\n    validatorRequiredField(key) {\n      return this.t('validation.required', { key });\n    },\n\n    validatorDiskAndNetowrk(errors) {\n      const disks = JSON.parse(this.value.diskInfo).disks;\n      const interfaces = JSON.parse(this.value.networkInfo).interfaces;\n\n      disks.forEach((disk) => {\n        if (Object.prototype.hasOwnProperty.call(disk, 'imageName') && !disk.imageName) {\n          const message = this.validatorRequiredField(\n            this.t('cluster.credential.harvester.image')\n          );\n\n          errors.push(message);\n        }\n\n        if (Object.prototype.hasOwnProperty.call(disk, 'storageClassName') && !disk.storageClassName) {\n          const message = this.validatorRequiredField(\n            this.t('cluster.credential.harvester.volume.storageClass')\n          );\n\n          errors.push(message);\n        }\n\n        if (!disk.size) {\n          const message = this.validatorRequiredField(\n            this.t('cluster.credential.harvester.disk')\n          );\n\n          errors.push(message);\n        }\n      });\n\n      interfaces.forEach((_interface) => {\n        if (!_interface.networkName) {\n          const message = this.validatorRequiredField(\n            this.t('cluster.credential.harvester.network.networkName')\n          );\n\n          errors.push(message);\n        }\n\n        if (_interface.macAddress && !isValidMac(_interface.macAddress)) {\n          const message = this.$store.getters['i18n/t']('cluster.credential.harvester.network.macFormat');\n\n          errors.push(message);\n        }\n      });\n\n      if (this.isOldFormat && this.disks.length === 1 && this.interfaces.length === 1) {\n        // It should be converted back to the old format, otherwise the user does not modify any value, and the vm will be automatically recreated after saving\n        delete this.value.diskInfo;\n        delete this.value.networkInfo;\n\n        this.value.imageName = disks[0].imageName;\n        this.value.diskSize = String(disks[0].size);\n\n        this.value.networkName = interfaces[0].networkName;\n      }\n    },\n\n    valuesChanged(value, type) {\n      this.value[type] = base64Encode(value);\n    },\n\n    onOpen() {\n      this.getVmImage();\n    },\n\n    async getVmImage() {\n      try {\n        const clusterId = get(this.credential, 'decodedData.clusterId');\n        const url = `/k8s/clusters/${ clusterId }/v1`;\n\n        if (url) {\n          const res = await this.$store.dispatch('cluster/request', { url: `${ url }/${ HCI.IMAGE }s` });\n\n          this.images = res?.data;\n        }\n      } catch (e) {\n        this.errors = exceptionToErrorsArray(e);\n      }\n    },\n\n    updateScheduling(neu) {\n      const { affinity } = neu;\n\n      if (!affinity.nodeAffinity && !affinity.podAffinity && !affinity.podAntiAffinity) {\n        this.value.vmAffinity = '';\n        this.vmAffinity = { affinity: {} };\n\n        return;\n      }\n\n      this.value.vmAffinity = base64Encode(JSON.stringify(affinity));\n      this.vmAffinity = neu;\n    },\n\n    updateNodeScheduling(nodeAffinity) {\n      if (!this.vmAffinity.affinity) {\n        Object.assign(this.vmAffinity, { affinity: { nodeAffinity } });\n      } else {\n        Object.assign(this.vmAffinity.affinity, { nodeAffinity });\n      }\n\n      this.updateScheduling(this.vmAffinity);\n    },\n\n    addVolume(type) {\n      if (type === 'volume') {\n        this.disks.push({\n          storageClassName: this.defaultStorageClass,\n          size:             10,\n        });\n      } else if (type === 'image') {\n        this.disks.push({\n          imageName: '',\n          size:      40,\n        });\n      }\n\n      this.update();\n    },\n\n    addNetwork() {\n      this.interfaces.push({\n        networkName: '',\n        macAddress:  ''\n      });\n\n      this.update();\n    },\n\n    update() {\n      const diskInfo = {\n        disks: this.disks.map((disk, idx) => {\n          return {\n            ...disk,\n            size:      Number(disk.size),\n            bootOrder: idx + 1\n          };\n        })\n      };\n\n      this.value.diskInfo = JSON.stringify(diskInfo);\n\n      const networkInfo = { interfaces: this.interfaces };\n\n      this.value.networkInfo = JSON.stringify(networkInfo);\n    },\n\n    removeVolume(vol) {\n      this.vol = vol;\n      removeObject(this.disks, vol);\n      this.update();\n    },\n\n    removeNetwork(vol) {\n      this.vol = vol;\n      removeObject(this.interfaces, vol);\n      this.update();\n    },\n\n    changeSort(idx, type) {\n      // true: down, false: up\n      this.disks.splice(type ? idx : idx - 1, 1, ...this.disks.splice(type ? idx + 1 : idx, 1, this.disks[type ? idx : idx - 1]));\n      this.update();\n    },\n\n    headerFor(disk = {}) {\n      const type = Object.prototype.hasOwnProperty.call(disk, 'imageName') ? 'image' : 'volume';\n\n      return {\n        [SOURCE_TYPE.Volume]: this.$store.getters['i18n/t']('cluster.credential.harvester.volume.volume'),\n        [SOURCE_TYPE.IMAGE]:  this.$store.getters['i18n/t']('cluster.credential.harvester.volume.imageVolume'),\n      }[type];\n    },\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Loading\n      v-if=\"$fetchState.pending\"\n      :delayed=\"true\"\n    />\n    <div v-else>\n      <div class=\"row mt-20\">\n        <div class=\"col span-6\">\n          <UnitInput\n            v-model=\"value.cpuCount\"\n            v-int-number\n            label-key=\"cluster.credential.harvester.cpu\"\n            suffix=\"C\"\n            output-as=\"string\"\n            required\n            :mode=\"mode\"\n            :disabled=\"disabled\"\n            :placeholder=\"t('cluster.harvester.machinePool.cpu.placeholder')\"\n          />\n        </div>\n\n        <div class=\"col span-6\">\n          <UnitInput\n            v-model=\"value.memorySize\"\n            v-int-number\n            label-key=\"cluster.credential.harvester.memory\"\n            output-as=\"string\"\n            suffix=\"GiB\"\n            :mode=\"mode\"\n            :disabled=\"disabled\"\n            required\n            :placeholder=\"t('cluster.harvester.machinePool.memory.placeholder')\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-20\">\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-model=\"value.vmNamespace\"\n            :mode=\"mode\"\n            :options=\"namespaceOptions\"\n            :searchable=\"true\"\n            :required=\"true\"\n            :disabled=\"namespaceDisabled\"\n            label-key=\"cluster.credential.harvester.namespace\"\n            :placeholder=\"\n              t('cluster.harvester.machinePool.namespace.placeholder')\n            \"\n          />\n        </div>\n\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.sshUser\"\n            label-key=\"cluster.credential.harvester.sshUser\"\n            :required=\"true\"\n            :mode=\"mode\"\n            :disabled=\"disabled\"\n            :placeholder=\"\n              t('cluster.harvester.machinePool.sshUser.placeholder')\n            \"\n            tooltip-key=\"cluster.harvester.machinePool.sshUser.toolTip\"\n          />\n        </div>\n      </div>\n\n      <h2 class=\"mt-20\">\n        {{ t('cluster.credential.harvester.volume.title') }}\n      </h2>\n      <draggable\n        v-model=\"disks\"\n        :disabled=\"isView\"\n        @end=\"update\"\n      >\n        <transition-group>\n          <div\n            v-for=\"(disk, i) in disks\"\n            :key=\"i\"\n          >\n            <InfoBox\n              class=\"box\"\n              :class=\"[disks.length === i +1 ? 'mb-10' : 'mb-20']\"\n            >\n              <button\n                type=\"button\"\n                class=\"role-link btn btn-sm remove\"\n                :disabled=\"i === 0\"\n                @click=\"removeVolume(disk)\"\n              >\n                <i class=\"icon icon-x\" />\n              </button>\n\n              <h4>\n                {{ headerFor(disk) }}\n              </h4>\n\n              <div class=\"row mb-10\">\n                <div class=\"col span-6\">\n                  <LabeledSelect\n                    v-if=\"disk.hasOwnProperty('imageName')\"\n                    v-model=\"disk.imageName\"\n                    :mode=\"mode\"\n                    :options=\"imageOptions\"\n                    :required=\"true\"\n                    :searchable=\"true\"\n                    :disabled=\"disabled\"\n                    label-key=\"cluster.credential.harvester.image\"\n                    :placeholder=\"t('cluster.harvester.machinePool.image.placeholder')\"\n                    @on-open=\"onOpen\"\n                    @input=\"update\"\n                  />\n\n                  <LabeledSelect\n                    v-else\n                    v-model=\"disk.storageClassName\"\n                    :options=\"storageClassOptions\"\n                    label-key=\"cluster.credential.harvester.volume.storageClass\"\n                    :mode=\"mode\"\n                    :disabled=\"disabled\"\n                    :required=\"true\"\n                    @input=\"update\"\n                  />\n                </div>\n\n                <div class=\"col span-6\">\n                  <UnitInput\n                    v-model=\"disk.size\"\n                    v-int-number\n                    label-key=\"cluster.credential.harvester.disk\"\n                    output-as=\"string\"\n                    suffix=\"GiB\"\n                    :mode=\"mode\"\n                    :disabled=\"disabled\"\n                    required\n                    :placeholder=\"t('cluster.harvester.machinePool.disk.placeholder')\"\n                    @input=\"update\"\n                  />\n                </div>\n              </div>\n\n              <div class=\"bootOrder\">\n                <div\n                  class=\"mr-15\"\n                >\n                  <button\n                    :disabled=\"i === 0\"\n                    class=\"btn btn-sm role-primary\"\n                    @click.prevent=\"changeSort(i, false)\"\n                  >\n                    <i class=\"icon icon-lg icon-chevron-up\" />\n                  </button>\n\n                  <button\n                    :disabled=\"i === disks.length -1\"\n                    class=\"btn btn-sm role-primary\"\n                    @click.prevent=\"changeSort(i, true)\"\n                  >\n                    <i class=\"icon icon-lg icon-chevron-down\" />\n                  </button>\n                </div>\n\n                <div class=\"text-muted\">\n                  bootOrder: {{ i + 1 }}\n                </div>\n              </div>\n            </InfoBox>\n          </div>\n        </transition-group>\n      </draggable>\n\n      <div class=\"volume\">\n        <button\n          type=\"button\"\n          class=\"btn btn-sm bg-primary mr-15 mb-10\"\n          @click=\"addVolume('volume')\"\n        >\n          {{ t('cluster.credential.harvester.volume.addVolume') }}\n        </button>\n\n        <button\n          type=\"button\"\n          class=\"btn btn-sm bg-primary mr-15 mb-10\"\n          @click=\"addVolume('image')\"\n        >\n          {{ t('cluster.credential.harvester.volume.addVMImage') }}\n        </button>\n      </div>\n\n      <hr class=\"mt-10 mb-10\">\n\n      <h2>{{ t('cluster.credential.harvester.network.title') }}</h2>\n      <div\n        v-for=\"(network, i) in interfaces\"\n        :key=\"i\"\n      >\n        <InfoBox\n          class=\"box\"\n          :class=\"[interfaces.length === i +1 ? 'mb-10' : 'mb-20']\"\n        >\n          <button\n            type=\"button\"\n            class=\"role-link btn btn-sm remove\"\n            :disabled=\"i === 0\"\n            @click=\"removeNetwork(network)\"\n          >\n            <i class=\"icon icon-x\" />\n          </button>\n\n          <h4>\n            <span>\n              {{ t('cluster.credential.harvester.network.network') }}\n            </span>\n          </h4>\n\n          <div\n            class=\"row\"\n          >\n            <div class=\"col span-6\">\n              <LabeledSelect\n                v-model=\"network.networkName\"\n                :mode=\"mode\"\n                :options=\"networkOptions\"\n                :required=\"true\"\n                label-key=\"cluster.credential.harvester.network.networkName\"\n                :placeholder=\"t('cluster.harvester.machinePool.network.placeholder')\"\n                @input=\"update\"\n              />\n            </div>\n\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"network.macAddress\"\n                label-key=\"cluster.credential.harvester.network.macAddress\"\n                :mode=\"mode\"\n                @input=\"update\"\n              />\n            </div>\n          </div>\n        </InfoBox>\n      </div>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-sm bg-primary\"\n        @click=\"addNetwork\"\n      >\n        {{ t('cluster.credential.harvester.network.addNetwork') }}\n      </button>\n\n      <portal :to=\"'advanced-'+uuid\">\n        <h3 class=\"mt-20\">\n          {{ t(\"workload.container.titles.nodeScheduling\") }}\n        </h3>\n        <NodeAffinity\n          :mode=\"mode\"\n          :value=\"vmAffinity.affinity.nodeAffinity\"\n          @input=\"updateNodeScheduling\"\n        />\n\n        <!-- <h3 class=\"mt-20\">\n          {{ t(\"workload.container.titles.podScheduling\") }}\n        </h3>\n        <PodAffinity\n          :mode=\"mode\"\n          :value=\"vmAffinity\"\n          :nodes=\"allNodeObjects\"\n          :namespaces=\"namespaces\"\n          @update=\"updateScheduling\"\n        /> -->\n\n        <h3 class=\"mt-20\">\n          {{ t(\"cluster.credential.harvester.userData.title\") }}\n        </h3>\n        <div>\n          <LabeledSelect\n            v-if=\"isCreate\"\n            v-model=\"userData\"\n            class=\"mb-10\"\n            :options=\"userDataOptions\"\n            label-key=\"cluster.credential.harvester.userData.label\"\n            :mode=\"mode\"\n            :disabled=\"disabled\"\n          />\n\n          <YamlEditor\n            ref=\"userDataYamlEditor\"\n            :key=\"userData\"\n            class=\"yaml-editor mb-20\"\n            :editor-mode=\"mode === 'view' ? 'VIEW_CODE' : 'EDIT_CODE'\"\n            :value=\"userData\"\n            :disabled=\"disabled\"\n            @onInput=\"valuesChanged($event, 'userData')\"\n          />\n        </div>\n\n        <h3>{{ t('cluster.credential.harvester.networkData.title') }}</h3>\n        <div>\n          <LabeledSelect\n            v-if=\"isCreate\"\n            v-model=\"networkData\"\n            class=\"mb-10\"\n            :options=\"networkDataOptions\"\n            label-key=\"cluster.credential.harvester.networkData.label\"\n            :mode=\"mode\"\n            :disabled=\"disabled\"\n          />\n\n          <YamlEditor\n            ref=\"networkYamlEditor\"\n            :key=\"networkData\"\n            class=\"yaml-editor mb-10\"\n            :editor-mode=\"mode === 'view' ? 'VIEW_CODE' : 'EDIT_CODE'\"\n            :value=\"networkData\"\n            :disabled=\"disabled\"\n            @onInput=\"valuesChanged($event, 'networkData')\"\n          />\n        </div>\n      </portal>\n    </div>\n    <div v-if=\"errors.length\">\n      <div\n        v-for=\"(err, idx) in errors\"\n        :key=\"idx\"\n      >\n        <Banner\n          color=\"error\"\n          :label=\"stringify(err.Message || err)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n$yaml-height: 200px;\n\n::v-deep .yaml-editor {\n  flex: 1;\n  min-height: $yaml-height;\n  & .code-mirror .CodeMirror {\n    position: initial;\n    height: auto;\n    min-height: $yaml-height;\n  }\n}\n\n::v-deep .info-box {\n  margin-bottom: 10px;\n}\n\n.box {\n  position: relative;\n}\n\n.remove {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding: 0px;\n}\n\n.bootOrder {\n  display: flex;\n  align-items: center;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./harvester.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./harvester.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./harvester.vue?vue&type=template&id=61c21274&scoped=true&\"\nimport script from \"./harvester.vue?vue&type=script&lang=js&\"\nexport * from \"./harvester.vue?vue&type=script&lang=js&\"\nimport style0 from \"./harvester.vue?vue&type=style&index=0&id=61c21274&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"61c21274\",\n  null\n  \n)\n\nexport default component.exports","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".clearfix[data-v-61c21274]:after,.clearfix[data-v-61c21274]:before{content:\\\" \\\";display:table}.clearfix[data-v-61c21274]:after{clear:both}.list-unstyled[data-v-61c21274]{margin:0;padding:0;list-style-type:none}.no-select[data-v-61c21274]{-webkit-user-select:none;-moz-user-select:none;user-select:none}.no-resize[data-v-61c21274]{resize:none}.hand[data-v-61c21274]{cursor:pointer;cursor:hand}.fixed[data-v-61c21274]{table-layout:fixed}.clip[data-v-61c21274]{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.clip[data-v-61c21274],.force-wrap[data-v-61c21274]{word-wrap:break-word}.force-wrap[data-v-61c21274]{white-space:normal}.bordered-section[data-v-61c21274]{border-bottom:1px solid var(--border);margin-bottom:20px;padding-bottom:20px}.section-divider[data-v-61c21274]{margin-bottom:20px;margin-top:20px}[data-v-61c21274] .yaml-editor{flex:1;min-height:200px}[data-v-61c21274] .yaml-editor .code-mirror .CodeMirror{position:static;height:auto;min-height:200px}[data-v-61c21274] .info-box{margin-bottom:10px}.box[data-v-61c21274]{position:relative}.remove[data-v-61c21274]{position:absolute;top:10px;right:10px;padding:0}.bootOrder[data-v-61c21274]{display:flex;align-items:center}\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}